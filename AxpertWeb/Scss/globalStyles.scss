@import '_variables/_genericVariables';
@import '_variables/_globalVariable';
@import '_mixins/_globalMixin';
/*@import url(http://fonts.googleapis.com/css?family=Lato:100,300,400,700,900,100italic,300italic,400italic,700italic,900italic);
@import url(http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,700,300,600,800,400);*/
/*@import url('https://fonts.googleapis.com/css?family=Roboto');*/  

  //* cyrillic *//
  @font-face {
    @include globalFontFamilyRoboto;
    src: local("Roboto"), local("Roboto-Regular"), url(global-font/KFOmCnqEu92Fr1Mu5mxKOzY.woff2) format("woff2");
    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
  }
  

  //* cyrillic-ext *//
@font-face {
  @include globalFontFamilyRoboto;
  src: local("Roboto"), local("Roboto-Regular"), url(global-font/KFOmCnqEu92Fr1Mu72xKOzY.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
  
  //* greek-ext *//
  @font-face {
    @include globalFontFamilyRoboto;
    src: local("Roboto"), local("Roboto-Regular"), url(global-font/KFOmCnqEu92Fr1Mu7mxKOzY.woff2) format("woff2");
    unicode-range: U+1F00-1FFF;
  }
  
  
  //* greek *//
  @font-face {
    @include globalFontFamilyRoboto;
    src: local("Roboto"), local("Roboto-Regular"), url(global-font/KFOmCnqEu92Fr1Mu4WxKOzY.woff2) format("woff2");
    unicode-range: U+0370-03FF;
  }
  
  
  //* vietnamese *//
  @font-face {
    @include globalFontFamilyRoboto;
    src: local("Roboto"), local("Roboto-Regular"), url(global-font/KFOmCnqEu92Fr1Mu7WxKOzY.woff2) format("woff2");
    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
  }
  
  
  //* latin-ext *//
  @font-face {
    font-family: 'SourceSansPro-Black';
    src: url('global-font/SourceSansPro-Black.otf') format("opentype");
  }
  
  
  @font-face {
    font-family: 'SourceSansPro-Light';
    src: url('global-font/SourceSansPro-Light.otf') format("opentype");
  }
  
  
  @font-face {
    font-family: 'SourceSansPro-LightIt';
    src: url('global-font/SourceSansPro-LightIt.otf') format("opentype");
  }
  
  
  @font-face {
    @include globalFontFamilyRoboto;
    src: local("Roboto"), local("Roboto-Regular"), url(global-font/KFOmCnqEu92Fr1Mu7GxKOzY.woff2) format("woff2");
    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
  }
  
  
  //* latin *//
  @font-face {
    @include globalFontFamilyRoboto;
    src: local("Roboto"), local("Roboto-Regular"), url(global-font/KFOmCnqEu92Fr1Mu4mxK.woff2) format("woff2");
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }
  
  @font-face {
    font-family: 'Segoe UI Regular';
    font-style: normal;
    font-weight: normal;
    src: local('Segoe UI Regular'), url('global-font/Segoe UI.woff') format('woff');
    }
    

    @font-face {
    font-family: 'Segoe UI Italic';
    font-style: normal;
    font-weight: normal;
    src: local('Segoe UI Italic'), url('global-font/Segoe UI Italic.woff') format('woff');
    }
    

    @font-face {
    font-family: 'Segoe UI Bold';
    font-style: normal;
    font-weight: normal;
    src: local('Segoe UI Bold'), url('global-font/Segoe UI Bold.woff') format('woff');
    }
    

    @font-face {
    font-family: 'Segoe UI Bold Italic';
    font-style: normal;
    font-weight: normal;
    src: local('Segoe UI Bold Italic'), url('global-font/Segoe UI Bold Italic.woff') format('woff');
    }

  body, html {
    //*font-family: 'Lato', sans-serif;*//
    font-family: 'Segoe UI', 'Roboto', sans-serif;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
  }
  html{
    &.iframeScrollFix{
      overflow: hidden;
    }
  }
  
  //* Fore alerts *//
  
  .shortMessageWrapper {
    position: fixed;
    height: 0;
    width: 100%;
    top: 55px;
    z-index: 10000000;
    text-align: center;
  }
  
  .shortMessageWrapperInApp {
    top: 5px;
  }
  
  .agc-alert-wrapper {
    color: $applicationBackgroundColor;
    background: transparent;
    opacity: 0.97;
    display: inline-block;
    padding: 6px 15px;
    border-radius: 2px;
    box-shadow: $applicationShadowColor;
  }
  
  @each $at, $atbgc, $atbc in $alertTypeColors{
  
    .agc-alert-#{$at} {
        background-color: $atbgc;
        border-color: $atbc;
    }
    
    .agc-alert-#{$at}  {
        .agc-alert-icon-wrapper{
        color: $atbgc;
        }
    }
  }
  .agc-alert-icon-wrapper {
    background: $applicationBackgroundColor;
    padding: 5px;
    border-radius: 50px;
    margin: 3px;
    margin-right: 15px;
    width: 24px;
  }
  
  .agc-close-btn {
    padding: 5px 0px;
    text-decoration: none;
    margin-left: 10px;
    color: $hotbtntext;
    text-shadow: 0 1px 0 #000;
    opacity: 0.7;
    float: right;
    &:hover {
      color: $hotbtntext;
      opacity: 1;
    }
  }
  
  //* For alerts end *//
  
  //* For buttons *//
  
  
.coldbtn,.normalbtn{
    @include coldbtn;
    margin-right: $hotColdBtnRightMargin;
    @media (max-width: $breakTabDevice) {
      min-width: $hotColdBtnMinWidthMobile;
    }
    &:focus {
        @include coldHotBtnFocus;
        opacity: 1;
        outline: none;
        background: none;
    }
    &:hover{
       //@include coldHotBtnHover;
       color: $applicationTextColor;
       background: none;
    }
    &:active{
      background: none;
    }
}
.hotbtn{
    @include hotbtn;
    margin-right: $hotColdBtnRightMargin;
    @media (max-width: $breakTabDevice) {
      min-width: $hotColdBtnMinWidthMobile;
    }
    &:focus {
      @include coldHotBtnFocus;
              opacity: 1;
              color: $hotbtntext;
              outline: none;
            }
      &:hover{
        //@include coldHotBtnHover;
        background: $hotBtnHoverColor;
        color: $hotbtntext;
    }
}
.hotbtntiny{
    @include hottiny;
    @include hotBtnColors;
    @media (max-width: $breakTabDevice) {
      min-width: $hotColdBtnMinWidthMobile;
    }
    &:focus {
      @include coldHotBtnFocus;
              opacity: .85;
              color: $hotbtntext;
              outline: none;
            }
    &:hover{
      @include coldHotBtnHover;
      color: $hotbtntext;
    }
}
.coldbtntiny,.normalbtntiny{
    @include hottiny;
    color: $coldbtntext;
    background-color: $applicationBackgroundColor;
    @media (max-width: $breakTabDevice) {
      min-width: $hotColdBtnMinWidthMobile;
    }
    &:focus {
      @include coldHotBtnFocus;
      opacity: .85;
      color: $coldbtntext;
      outline: none;
    }
    &:hover{
      @include coldHotBtnHover;
    }
}
.hotbtn:disabled:hover, .coldbtn:disabled:hover, .normalbtn:disabled:hover {
        opacity: $btnOpacity;
}
.hotbtntiny:disabled:hover, .coldbtntiny:disabled:hover {
        opacity: $btnOpacity;
}
.btn{
  &:active{
    &:focus{
       outline: none;
    }
  }
}

///  punch in and punch out color for bootstrap override

.hotbtn{
  &.form-control[disabled]{
      @include hotbtnDisable;
  }
}


  //*form rtl Support*//
  .btextDir-rtl {
    .panel-heading a:before {
      @include floatRight;
    }
    .dropdown-menu {
      @include textRight;
    }
  }
  .jconfirm{
    &.jconfirm-white,&.jconfirm-light{
      .jconfirm-box{
        .jconfirm-buttons{
          button{
            text-transform: none;
            @include floatRight;
            outline: none;
          }
        }
      }
    }
  }
  .modal.ui-draggable {
    overflow: hidden;
  }
  
  @media (min-width: 992px) {
    .modal-xl {
      width: 1140px;
    }
    .modal-xxl {
      width: 100%;
    }
  }
  
  ::-ms-clear {
    display: none;
  }
//   .modal {
//     &.fade{
//         &.in{
//             top: 10%;
//         }
//     }
// }

#mainQRcodeWrapper{
	display:none;
}
.jconfirm.jconfirm-light,.jconfirm.jconfirm-white{
  .jconfirm-box {
    .jconfirm-buttons{
      .hotbtn{
        @include hotbtn;
        margin-top: 1px;
        margin-right: $hotColdBtnRightMargin;
        @media (max-width: $breakTabDevice) {
          min-width: $hotColdBtnMinWidthMobile;
        }
        &:focus {
          @include coldHotBtnFocus;
                  opacity: 1;
                  color: $hotbtntext;
                  outline: none;
                }
          &:hover{
            //@include coldHotBtnHover;
            background: $hotBtnHoverColor;
            color: $hotbtntext;
        }
    }
    .coldbtntiny,.normalbtntiny,.coldbtn{
      @include hottiny;
      color: $coldbtntext;
      background-color: $applicationBackgroundColor;
      @media (max-width: $breakTabDevice) {
        min-width: $hotColdBtnMinWidthMobile;
      }
      &:focus {
        @include coldHotBtnFocus;
        opacity: .85;
        color: $coldbtntext;
        outline: none;
      }
      &:hover{
        @include coldHotBtnHover;
      }
  }
    }
  }
} 

//* Card ======================================== *//
@import 'materialUI/_card.scss';

//* Material font style for mainpage*//
//* fallback *//
@font-face {
  @include materialIconFontFamily;
  src: local('Material Icons Outlined'),
  local('MaterialIcons-Outlined'),
  url(global-font/gok-H7zzDkdnRel8-DQ6KAXJ69wP1tGnf4ZGhUce.woff2) format('woff2'),
  url(global-font/gok-H7zzDkdnRel8-DQ6KAXJ69wP1tGnf4ZGhUcY.woff) format('woff');
  
}

.material-icons {
  @include materialIcons;
}
@font-face {
  font-family: 'Poppins';
  font-style: normal;
  font-weight: 400;
  src: local('Poppins'),
       url('global-font//poppins-v15-latin-regular.woff2') format('woff2'), /* Super Modern Browsers */
       url('global-font/poppins-v15-latin-regular.woff') format('woff'), /* Modern Browsers */
}
