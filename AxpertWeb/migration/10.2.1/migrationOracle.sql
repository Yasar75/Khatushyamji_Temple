drop table AX_NOTIFY;
drop sequence ax_notify_seq;


drop table AX_NOTIFY_WORKFLOW;
drop table AX_MOBILE_RESPONSE;
drop table AX_MOBILE_USER;
drop table AX_NOTIFY_USERS;

drop table AX_LAYOUTDESIGN_SAVED;
drop table AX_LAYOUTDESIGN;

drop sequence ax_layoutdesign_seq;
drop sequence ax_layoutdesign_saved_seq;


CREATE TABLE AX_NOTIFY(
    NOTIFICATION_ID NUMBER(10,0) primary key,
    TITLE VARCHAR2(255),
    MESSAGE NCLOB,
    ACTIONS NCLOB,
    FROMUSER VARCHAR2(255),
    BROADCAST VARCHAR2(1) DEFAULT 'N',
    STATUS VARCHAR2(255),
    CREATED_BY VARCHAR2(255),
    CREATED_ON TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    WORKFLOW_ID VARCHAR2(255),
    PROJECT_ID VARCHAR2(255),
    PURGE_ON_FIRST_ACTION VARCHAR2(1) DEFAULT 'N',
    NOTIFICATION_SENT_DATETIME TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    RECORDID VARCHAR2(255),
    lno VARCHAR2(255),
    elno VARCHAR2(255)
);

CREATE SEQUENCE ax_notify_seq START WITH 1;

CREATE OR REPLACE TRIGGER AX_NOTIFY_bir 
BEFORE INSERT ON AX_NOTIFY FOR EACH ROW 
BEGIN 
    :new.NOTIFICATION_ID := ax_notify_seq.nextval; 
END;
/

CREATE TABLE AX_NOTIFY_WORKFLOW(
    NOTIFICATION_ID NUMBER(10,0),
    RECORDID VARCHAR2(255),
    APP_LEVEL VARCHAR2(2),
    APP_DESC VARCHAR2(2),
    CREATED_ON TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    WORKFLOW_ID VARCHAR2(255),
    PROJECT_ID VARCHAR2(255),
    lno VARCHAR2(255),
    elno VARCHAR2(255)
);


CREATE TABLE AX_MOBILE_RESPONSE(
    NOTIFICATION_ID NUMBER(10,0),
    USER_ID VARCHAR2(255),
    RESPONSE NCLOB, 
    PROJECT_ID VARCHAR2(255)
);


CREATE TABLE AX_MOBILE_USER(
    IMEI VARCHAR2(255),
    USER_ID VARCHAR2(255),
    PROJECT_ID VARCHAR2(255),
    FIREBASE_ID VARCHAR2(255),
    GROUPNAME VARCHAR2(255),
    ACTIVE VARCHAR2(1)
);

CREATE TABLE AX_NOTIFY_USERS(    
    NOTIFICATION_ID NUMBER(10,0),
    USER_ID VARCHAR2(255),
    STATUS VARCHAR2(255),
    PROJECT_ID VARCHAR2(255)
);



CREATE TABLE AX_LAYOUTDESIGN(
    DESIGN_ID NUMBER(10,0) primary key,
    TRANSID VARCHAR2(255),
    MODULE VARCHAR2(255),
    CONTENT NCLOB,
    CREATED_BY VARCHAR2(255),
    UPDATED_BY VARCHAR2(255),
    IS_DELETED VARCHAR2(1) DEFAULT 'N',
    IS_PRIVATE VARCHAR2(1) DEFAULT 'N',
    CREATED_ON TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    UPDATED_ON TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
    IS_MIGRATED VARCHAR2(1) DEFAULT 'N'
);

CREATE SEQUENCE ax_layoutdesign_seq START WITH 1;

CREATE OR REPLACE TRIGGER AX_LAYOUTDESIGN_bir 
BEFORE INSERT ON AX_LAYOUTDESIGN FOR EACH ROW 
BEGIN 
    :new.DESIGN_ID := ax_layoutdesign_seq.nextval; 
END;
/


CREATE TABLE AX_LAYOUTDESIGN_SAVED(
    DESIGN_ID NUMBER(10,0) primary key,
    TRANSID VARCHAR2(255),
    MODULE VARCHAR2(255),
    CONTENT NCLOB,
    CREATED_BY VARCHAR2(255),
    UPDATED_BY VARCHAR2(255),
    IS_DELETED VARCHAR2(1) DEFAULT 'N',
    CREATED_ON TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    UPDATED_ON TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
    IS_MIGRATED VARCHAR2(1) DEFAULT 'N',
    IS_PUBLISH VARCHAR2(1) DEFAULT 'N',
    IS_PRIVATE VARCHAR2(1) DEFAULT 'N',
    PARENT_DESIGN_ID NUMBER(10,0),
    RESPONSIBILITY NCLOB,
    ORDER_BY NUMBER
);

CREATE SEQUENCE ax_layoutdesign_saved_seq START WITH 1;

CREATE OR REPLACE TRIGGER AX_LAYOUTDESIGN_SAVED_bir 
BEFORE INSERT ON AX_LAYOUTDESIGN_SAVED FOR EACH ROW 
BEGIN 
    :new.DESIGN_ID := ax_layoutdesign_saved_seq.nextval; 
END;
/


alter table axtasks add notify_status VARCHAR2(1) DEFAULT 'N'
/

update ax_homebuild_saved set target = replace(target,'Wrapper','')
/

update ax_widget set widget_type='kpi' where widget_type='table'
/

commit
/


