[tstruct]
desc=<h>TStruct</h>You can define your form by defining frames and form elements and setting their properties in the property box. To add a frame, add a row under the Tstruct and select DC in the Type column.
transid=<h>TransId</h>Unique ID of the Tstruct. Should be of length five.The first character should not be a number.
caption=<h>Caption</h>The caption of the Tstruct displayed at runtime.
savecontrolfield=<h>SaveControlField</h>Specify a boolean input field here .During runtime,if the inputField value is true(‘T’), the corresponding transaction gets saved into the database.Otherwise it is not saved.
deletecontrolfield=<h>DeleteControlField</h>Specify a boolean input field here .During runtime,when the user tries to delete a record, the DeleteControlField is evaluated. In case it holds a ‘T’, the transaction gets deleted ,otherwise it is not deleted.
trackchanges=<h>TrackChanges</h>Set this property to True to maintain a history of all the changes made to transactions.The information stored can be viewed through View History option at run time.
attachment=<h>Attachment</h>Set this property to True to allow images or documents to be attached to a transaction. At run time an attach option automatically appears in the Task menu that can be used to attach any external document or image to a transaction.The executable files like exe, com, bat cannot be attached. 
searchcondition=<h>SearchCondition</h>Specify the condition based on which the data will be filtered in the search option at runtime.
listview=<h>ListView</h>Set this property to True to create automatic lists.At runtime click on the List View button to view the list of transaction data. 
schema=<h>Schema</h>Specify the name of the schema to which the Tstruct belongs to.
workflow=<h>WorkFlow</h>Set this property to True to enable the Tstruct for workflow configuration .A work flow is an approval process where the users will approve the transaction in predefined order. 
purpose=<h>Purpose</h>Use this property for documenting the purpose of the Tstruct.Allows upto 100 characters.
traceability=<h>Traceability</h>If set to True,for every change made,a backup of the Tstruct will be stored in the XML format.

[dc]
desc=<h>DC</h>A data container appears as a frame in the form.In the DC properties,enter a suitable caption and a tablename.Add inputfields below the DC.

name=<h>Name</h>The unique name by which a DC is identified. Cannot be altered.
caption=<h>Caption</h>The caption of the DC displayed at runtime.
tablename=<h>TableName</h>A DC corresponds to a table in the database.Enter the name of the table here.
asgrid= <h>AsGrid</h>Set this property to True to define a DC as  Grid DC.The Primary DC should always be a non grid DC.
allowchange=<h>AllowChange</h>Set this property to False to make a  DC read only.
allowempty=<h>AllowEmpty</h>Applicable to Grid DC.If this property is set to False a grid DC will not allow empty values.At least one row of values should be input during runtime.
adddcrows=<h>AddDCrows</h>Applicable to Grid DC. Set this property to False to prevent addition of multiple rows in a grid. In this case every header will have only a single detail row.
deletedcrows=<h>DeleteDCrows</h>Applicable to Grid DC. Set this property to False to prevent deletion of existing rows in a grid.
popup=<h>PopUp</h>Applicable to Grid DC. This property is used to define a grid dc as a popgrid or a subgrid.Used when there is a many to many relationship between records.
purpose=<h>Purpose</h>Used for documentation purposes.


[inputfield]
desc=<h>InputField</h>An inputfield is a data element which accepts data from the user.To add an Inputfield,add a row and select Inputfield in the Type column.In the properties,enter a name and a caption for the inputfield and select a datatype.
name=<h>Name</h>The name of the inputfield. No special characters allowed.A field by this name will be created in the database table associated with the DC.
caption=<h>Caption</h>Caption displayed to the user in the transaction form.
datatype=<h>DataType</h>Datatype for the inputfield value. Choose from the five types listed.
datawidth=<h>DataWidth</h>Enter a numeric value here.This will restrict the data entry to the width specified.
decimal=<h>Decimal</h>Applicable only in the case of the Numeric Data type. On specifying this, the system allows a real number to be entered.
details=<h>Details</h>Applicable for Accept,Select, Autogenerate and Fill  mode of entry. For Accept,you  can attach an SQL ; for Autogenerate you can define the sequence ;for Fill you can pick the source Tstruct and for Select you can opt to select from Tstruct,SQL or List.
hidden=<h>Hidden</h>Set this property to True to hide the field in the form.
allowempty=<h>AllowEmpty</h>Set to False to prevent users from leaving the field empty.
readonly=<h>ReadOnly</h>Set to True to disable field in the form and prevent modification of its data.
setcarry=<h>SetCarry</h>Set to True to carry the previous transaction’s field value to the next transaction.
savevalue=<h>saveValue</h>Set to False to prevent this field from being created in the database table.The value in this field will not be saved to database.
expression=<h>Expression</h>Use this property to perform calculations, evaluations or for prefixing values.
validateexpression=<h>ValidateExpression</h>Set another expression here to check if the value for the field is correct or not.
allowduplicate=<h>AllowDuplicate</h>Set this property to False to prevent users from entering duplicates values in this field. The duplicate will be checked across all transactions entered in this Tstruct if the field is a non grid field. It will prevent duplicate line items from being entered in one form if the field is a grid field.
onlypositive=<h>OnlyPositive</h>Allows only positive numbers to be entered in the field. This is applicable only for numeric fields.
applycomma=<h>ApplyComma</h>Displays numeric values with commas in either millions or lakhs as per the setting in application properties.
mask=<h>Mask</h>Use this property to specify the format of data entry in the field.Mask definition can contain up to three sections separated by semicolons; for example, (999) 000-0000!;0;*.
pattern=<h>Pattern</h>Use this property to validate the format of values entered in the field.
passwordcharacter=<h>PasswordCharacter</h>Specify a single character here. This character will be used for display in case the entered text/value is being used as a Password or is being hidden for the sake of security.
hint=<h>Hint</h>The text that should be displayed as tool tip.
clientvalidation=<h>ClientValidation</h>Set this to True to do the validation at the component itself. If False, the validation will be done only when data is submitted.
searchsql =<h>SearchSql</h>Applicable if save value is false. If this field exists in another Tstruct,you can specify a query here to retrieve it  for search.
purpose=<h>Purpose</h>Use this property for documenting about the inputfield.
detailstructure=<h>DetailStructure</h>
displaydetail=<h>DisplayDetail</h>Enter a string value in this field. At runtime, When the user focuses on this field this value will be displayed in a box as a comment.
tabstop=<h>TabStop</h>When TabStop is set to False, the field will not receive focus when using tab keys to move from one field to another. When TabStop is set to True, Axpert lets users focus on a field but not change its value.Available only when ReadOnly property is set to true.


[fillgrid]
desc=<h>FillGrid</h>Fillgrids are used to automate the process of data entry into a grid DC. To add a FillGrid, add a row and select FillGrid in the type column

name=<h>Name</h>The unique name given to the FillGrid
caption=<h>Caption</h>Caption to be displayed at runtime.
sql=<h>Sql</h>If the FillGrid is based on an SQL, the SQL statement is entered here.
targetdc=<h>TargetDC</h>Select the Target DC from the list. The Target DC is the DC which needs to be filled.
mapdetails=<h>MapDetails</h>Used to map the source fields and the target fields.The source fields in the SQL are mapped to the target fields.
multiselect=<h>MultiSelect</h>Set this property to True to be able to select the rows to be filled into the grid.If set to False, all rows in the SQL result will be added to the grid.
autoshow=<h>AutoShow</h>If AutoShow is True, the FillGrid will be executed if the target grid is empty and when the user focuses on the grid DC. If AutoShow is False, the fill grid is executed only when it is selected from the menu. The FillGrid option is available on right click on the grid in the form.
sourcedc=<h>SourceDC</h>If the source of data is from another grid DC in the same TStruct,specify it here. 
validate=<h>Validate</h>If the validate flag is true, on filling data from the source into the grid, Axpert will evaluate expressions,assign it to the field & validate every cell in the grid. 
executeonsave=<h>ExecuteOnSave</h>If this property is set to true the fill grid is executed before saving the transaction even if the user has not clicked on the grid DC.
firmbind=<h>FirmBind</h>The SQL in Fillgrid can have parameters. The parameters can be any field in the tstruct. These fields are called parent fields. If any parent field is changed and all parent fields are bound, the fill grid is automatically executed if the firm bind property is true.
selecton=<h>Selecton</h>Applicable when Multi select is true.Specifies how a row in a FillGrid can be selected at runtime.
footerstring=<h>FooterString</h>Enter a string that will be displayed as a footer in the FillGrid multiselect form at runtime.
validateexpression=<h>ValidateExpression</h>Enter expressions for allowing selection of rows here. These expressions are evaluated every time a row is selected or every time a value is edited.If the result s true(‘T’), then the rows are allowed to be selected. The column names in the SQL result are used as variable names in the expression.
addrows=<h>AddRows</h>Select from the options provided.The FillGrid works based on the option selected.
columnproperty=<h>ColumnProperty</h>Use this property to set the column properties in the grid. All the columns (of SQL result) will be listed in a grid table.
purpose=<h>Purpose</h>Used for documentation.


[genmap]
desc=<h>GenMap</h>Use the Genmap component  to post a transaction from one structure(source) to another(target).

name=<h>Name</h>Unique name given to the GenMap.Cannot be altered.
caption=<h>Caption</h>The caption of GenMap that would be displayed during run time.
targettstruct=<h>TargetTStruct</h>Select the TransID of the target Tstruct where the posting is to be done.
basedondc=<h>BasedonDC</h>Specify the Dc from which the details should be posted to the target Tstruct.
controlfieldname=<h>ControlFieldname</h>Used for conditional posting. During runtime, the posting is executed based on the value in the field specified here.
active=<h>Active</h>Set to false to disable the GenMap.
schemaoftarget=<h>SchemaOfTarget</h>Specify the schema name here in case the target transaction belongs to another schema.
map=<h>Map</h>Specify the mapping of source fields to the target fields here.
onpost=<h>OnPost</h>Enter the set of expressions that should be executed after mapping the source fields to target fields.
purpose=<h>Purpose</h>Used for documentation. 
onApprove=<h>OnApprove</h>Set to true if the GenMap should post only when approved in the workflow.
onReject=<h>OnReject</h>Set to true if the GenMap should post only when rejected in the workflow.


[mdmap]
desc=<h>MDMap</h>Use an MDMap to update a field value in the Master table on the basis of a transaction in the Detail table .The data from a field in the detail table is updated to a specific field in the master table subject to certain criteria.An MDMap is always inserted in the detail table and the properties are set to link the detail TStruct and the master TStruct.

name=<h>Name</h>Unique Name given to the MDMap.Cannot be altered.
caption=<h>Caption</h>The caption displayed at runtime.
extended=<h>Extended</h>Set this property to True if you want the entire record from the Detail table to be added to the Master in case it does not exist.In this case,the corresponding update definition should be specified in the MapText property.
mastertransaction=<h>MasterTransaction</h>The Tstruct into which the details are to be updated. Select from the list of TransId of the various Master Tstructs.
masterfield=<h>MasterField</h>The field in the Master Tstruct which needs to be updated. 
detailfield=<h>DetailField</h>The field in the Detail Tstruct from which data is updated into Master field.
mastersearchfield=<h>MasterSearchfield</h>The field in the Master TStruct to which the detail relation field is related.Select Default if the key field or the Primary Key should be used for matching.
detailsearchfield=<h>DetailSearchfield</h>Field in the Detail TStruct that relates it to the Master TStruct.
mastertable=<h>MasterTable</h>On selecting the MasterTransaction,the table name corresponding to the Master TStruct is displayed here.
updatetype=<h>UpdateType</h>Select the type of operation from the list.
controlfield=<h>ControlField</h>Used to perform Conditional updation. Select a boolean inputfield here.If the value in the inputfield is true('T'),the masterfield will be updated according to the Updatetype specified. 
append=<h>Append</h>Set this property to True to update the records without using any search condition.
initondel=<h>InitOnDel</h>Applicable when the UpdateType is Replace.This is the operation that should be initiated in the Master in case the Detail transaction gets deleted at any point of time.If the Init On Del property is set to True, then the master field is initialized to null when the detail transaction is removed.l
maptext=<h>MapText</h>The update definition for the Master table is specified here. Applicable only when the Extended property is set to True.
purpose=<h>Purpose</h> Used for documentation.
onapprove=<h>OnApprove</h>Set to True if the MDmap should post only when approved in the workflow.
onreject=<h>OnReject</h>Set to true if the MDMap should post only when rejected in the workflow.

[modeofentry]
accept=Select Accept if an inputfield should accept the data input by the user at runtime.
calculate=Select Calculate if the value needs to be computed at runtime.
autogenerate=Select Autogenerate if the field value has to be automatically generated as a sequence.
select=Use Select as the MOE to retrieve data from another structure or query.
fill=Select Fill to populate the inputfield based on a value above it.


